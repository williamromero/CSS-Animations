MODELO VISTA CONTROLADOR
Ruby on Rails

Cada aplicación contiene en sí, una carpeta llamada "app" en la que se
encuentran los folders "controllers", "models" y "views". Esto debido a que
responde a la lógica MVC (aplicación de estructura).
P

	- Modelo: Está formado por clases. Cada clase es un modelo y cada modelo, 
			 representa una tabla en la DB. Por lo tanto, es el encargado de trabajar con la lógica de la base de datos.
			 Por otra parte, los modelos son "objetos" que se crean para la aplicación web.
			 Los modelos son la forma como se encapsulara la informacion, es decir es el tipo de informacion que finalmente vera el usuario. 

	- Vista: Es la representación final de una petición. (HTML, ERB, JS, CSS) Es decir,
			 la forma en la que se presentará la información.
			 Asimismo, es como cuando en un archivo PHP utilizamos diferentes plantillas HTML para desplegar lo que se busca en la DB con scripts de PHP y MySQL. Por lo tanto, las vistas son las que despliegan las funciones que se requieren al explorador.

	- Controlador: Es el encargado de la lógica de la petición. Es un puente entre la 
			 Vista y el modelo. Cada controlador, será una clase con métodos y por cada método habrá una vista que representará la versión procesada de ese método.
			 El controlador, por lo tanto se traduce en los archivos que operan acciones y scripts, haciendo llamadas a diferentes propiedades del objeto (las clases de la DB) y desplegandolas luego en la vista.

			 Los controladores son como las operaciones que se van a realizar, es ahi donde se incluyen los metodos a los cuales se podran acceder por medio de una URL: Ejemplo de una url donde se llama a un controlador usuario y a su metodo login, con dos parametros: 
			 http://misitioweb.com/usuario/login/{par... 

			 Un controlador puede acceder y utilizar una clase Modelo para pasar datos a las vistas. 

Proceso de Desarrollo:

	Paso 01:
		-> Cuando se visita la página: 0.0.0.0:3000/users se emite una solicitud al servidor, esta solicitud llega al archivo 'config/routes.db'.
		Este, es un archivo que se encuentra en la carpeta config y mapea en base a la URL.
		El archivo "routes.rb", llamará a los recursos de acción del controlador Users o Posts en este ejemplo.

			MiblogDemo::Application.routes.draw do
				resources :posts
				resources :users
			end

		Inicialmente, la envía a la acción index del controlador al que corresponde, en este caso 'users_controller' o 'posts_controller'.

	Paso 02:
		-> Cuando nos dirigmos a las acciones de los controladores, podemos evaluar las acciones predefinidas si utilizamos "Scaffold".

		- def index
			@users = User.all
		end

		En este caso, la acción index solicita al "modelo User" que le provea de la lista de todos los usuarios y luego deposita ese valor en la variable @users.

	Paso 03:
		-> Hace la petición al modelo, que con sus clases, maneja los modelos, que a sus vez son tablas.

	Paso 04:
		-> Esta petición es recibida por la clase User, la cual hereda de la biblioteca "ActiveRecord", la cual realiza una acción "Mapeo - Base Relacional" (Mapea una tabla). La clase del modelo debe de declararse en singular debido a que la tabla deberá de reconocerse en plural.

			class User < ActiveRecord::Base
				has_many :posts
			end

	Paso 05:

		El modelo de User devuelve la lista de usuarios al controlador Users_Controller.

	Paso 06:

		El controlador deposita la lista en la variable @Users, la cual será impresa en la vista 'index', del controlador Users.

	Paso 07:

		La vista utiliza código embebido. Es decir que permite la incorporación del lenguaje Ruby, el cual traducirá a HTML.
		Las variables que comienzan con @, son variables de instancia de un método que representa una vista. En ella se contienen los elementos desplegar en la vista.

	Paso 08: 

		El controlador, pasa código HTML a la vista.
		

Referencias: 
1. http://www.sectornueve.com/programacion/ingenieria-de-software/mvc-para-dummies/
2. http://www.webwindowslinux.com/2013/05/explicando-la-arquitectura-aspnet-mvc.html
3. https://gist.github.com/Elicia/8473536 //-> MVC Expliación
